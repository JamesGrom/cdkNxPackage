import { composeEnvFile } from './utils/composeEnvFile';
import { getOutputs } from './utils/getOutputs';
import { validateEnvVals } from './utils/validateEnvVals';
import { getLambdaEnvVars } from './utils/getLambdaEnvVars';
const defaultOutputValues = {
  restURL: 'https://127.0.0.1:3000',
};
const normalizeCdkOutputs = (input: object) => {
  return {
    ...input,
    ...defaultOutputValues,
  };
};

const outputs: any = getOutputs(`${process.argv[2]}`);
console.log(outputs);
const normalizedOutputs = normalizeCdkOutputs(outputs);
validateEnvVals(normalizedOutputs);
getLambdaEnvVars('authillo-james').then((remoteEnvs) => {
  const computedFilePath: string = `env/${process.argv[3] ?? 'env.json'}`;
  const compositeOutputs = { normalizedOutputs, ...remoteEnvs };
  composeEnvFile(JSON.stringify(compositeOutputs), computedFilePath);
});
